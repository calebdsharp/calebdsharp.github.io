{"ast":null,"code":"var _jsxFileName = \"/Users/calebsharp/github/calebdsharp.github.io/src/Components/Photos.js\";\nimport React, { Component } from 'react';\n\nclass Photos extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderPhotos = () => {\n      if (this.state.error) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 14\n          }\n        }, \"Error: \", this.state.error);\n      } else if (!this.state.isLoaded) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 14\n          }\n        }, \"Loading...\");\n      } else {\n        return /*#__PURE__*/React.createElement(\"ul\", {\n          className: \"pic-list\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 9\n          }\n        }, this.state.photos.map((pic, i) => {\n          let caption = pic.caption;\n          return /*#__PURE__*/React.createElement(\"li\", {\n            classname: \"photos\",\n            key: pic.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"figure\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            classname: \"pic\",\n            src: pic.media_url,\n            width: \"300px\",\n            height: \"300px\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }\n          }), /*#__PURE__*/React.createElement(\"figcaption\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }\n          }, caption)));\n        }));\n      }\n    };\n\n    this.state = {\n      photos: [],\n      isLoaded: false,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://graph.instagram.com/17841400631260357/media?access_token=IGQVJWSURzMkdyQWw3eWNzalBVdWlZAanFNZAnZAyOEQ2cHY0WW5PSTV6NHNnMkxrMGJJdTBDalNjaFl2c0cxZAFdvNHNvN190Ukw5dUdCSENzcGJwX0NtRWpna0NaMVF4bzdzQ2drb1R3&fields=id,timestamp,media_url').then(response => response.json()).then(data => {\n      console.log(data.data);\n      this.setState({\n        photos: data.data,\n        isLoaded: true\n      });\n    }).catch(err => this.setState({\n      error: err.message\n    }));\n  }\n\n  render() {\n    const {\n      error,\n      photos,\n      isLoaded\n    } = this.state; // const displayphotos = this.state.photos.map((pic, i) => {\n    //     let caption = pic.caption;\n    //     return (\n    //         <li classname=\"photos\" key={pic.id}>\n    //             <figure>\n    //                 <img classname=\"pic\" src={pic.media_url} width=\"300px\" height=\"300px\" />\n    //                 <figcaption>{caption}</figcaption>\n    //             </figure>\n    //         </li>\n    //     );\n    // });\n    //{displayPhotos}  use to display in return\n    // if (error) {\n    //     return <div>Error: {error.message}</div>;\n    // } else if (!isLoaded) {\n    //     return <div style={{ textAlign: 'center' }}>Loading...</div>;\n    // }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, this.renderPhotos());\n  }\n\n}\n\nexport default Photos;","map":{"version":3,"sources":["/Users/calebsharp/github/calebdsharp.github.io/src/Components/Photos.js"],"names":["React","Component","Photos","constructor","props","renderPhotos","state","error","isLoaded","textAlign","photos","map","pic","i","caption","id","media_url","componentDidMount","fetch","then","response","json","data","console","log","setState","catch","err","message","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAC7BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAgBnBC,YAhBmB,GAgBJ,MAAM;AACnB,UAAI,KAAKC,KAAL,CAAWC,KAAf,EAAsB;AACpB,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAa,KAAKD,KAAL,CAAWC,KAAxB,CAAP;AACD,OAFD,MAEO,IAAI,CAAC,KAAKD,KAAL,CAAWE,QAAhB,EAA0B;AAC/B,4BAAO;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD,OAFM,MAEA;AACL,4BACE;AAAI,UAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEE,KAAKH,KAAL,CAAWI,MAAX,CAAkBC,GAAlB,CAAsB,CAACC,GAAD,EAAMC,CAAN,KAAY;AAChC,cAAIC,OAAO,GAAGF,GAAG,CAACE,OAAlB;AACA,8BAAQ;AAAI,YAAA,SAAS,EAAC,QAAd;AAAuB,YAAA,GAAG,EAAEF,GAAG,CAACG,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AAAK,YAAA,SAAS,EAAC,KAAf;AAAqB,YAAA,GAAG,EAAEH,GAAG,CAACI,SAA9B;AAAyC,YAAA,KAAK,EAAC,OAA/C;AAAuD,YAAA,MAAM,EAAC,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAaF,OAAb,CAFF,CADM,CAAR;AAMD,SARD,CAFF,CADF;AAcD;AACF,KArCkB;;AAEjB,SAAKR,KAAL,GAAa;AACXI,MAAAA,MAAM,EAAE,EADG;AAEXF,MAAAA,QAAQ,EAAE,KAFC;AAGXD,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAEDU,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,+OAAD,CAAL,CAAuPC,IAAvP,CAA4PC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAAxQ,EAAyRF,IAAzR,CAA8RG,IAAI,IAAI;AACpSC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACA,IAAjB;AACA,WAAKG,QAAL,CAAc;AAACf,QAAAA,MAAM,EAAEY,IAAI,CAACA,IAAd;AAAoBd,QAAAA,QAAQ,EAAE;AAA9B,OAAd;AACD,KAHD,EAGGkB,KAHH,CAGSC,GAAG,IAAI,KAAKF,QAAL,CAAc;AAAClB,MAAAA,KAAK,EAAEoB,GAAG,CAACC;AAAZ,KAAd,CAHhB;AAID;;AAyBDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACtB,MAAAA,KAAD;AAAQG,MAAAA,MAAR;AAAgBF,MAAAA;AAAhB,QAA4B,KAAKF,KAAvC,CADO,CAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AAEA,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,KAAKD,YAAL,EAFF,CADF;AAOD;;AAtE4B;;AAyE/B,eAAeH,MAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass Photos extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      photos: [],\n      isLoaded: false,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://graph.instagram.com/17841400631260357/media?access_token=IGQVJWSURzMkdyQWw3eWNzalBVdWlZAanFNZAnZAyOEQ2cHY0WW5PSTV6NHNnMkxrMGJJdTBDalNjaFl2c0cxZAFdvNHNvN190Ukw5dUdCSENzcGJwX0NtRWpna0NaMVF4bzdzQ2drb1R3&fields=id,timestamp,media_url').then(response => response.json()).then(data => {\n      console.log(data.data);\n      this.setState({photos: data.data, isLoaded: true});\n    }).catch(err => this.setState({error: err.message}))\n  }\n\n  renderPhotos = () => {\n    if (this.state.error) {\n      return <div>Error: {this.state.error}</div>;\n    } else if (!this.state.isLoaded) {\n      return <div style={{ textAlign: 'center' }}>Loading...</div>;\n    } else {\n      return (\n        <ul className=\"pic-list\">\n        {\n          this.state.photos.map((pic, i) => {\n            let caption = pic.caption;\n            return (<li classname=\"photos\" key={pic.id}>\n              <figure>\n                <img classname=\"pic\" src={pic.media_url} width=\"300px\" height=\"300px\"/>\n                <figcaption>{caption}</figcaption>\n              </figure>\n            </li>)\n          })\n        }\n      </ul>);\n    }\n  }\n\n  render() {\n    const {error, photos, isLoaded} = this.state;\n\n    // const displayphotos = this.state.photos.map((pic, i) => {\n    //     let caption = pic.caption;\n    //     return (\n    //         <li classname=\"photos\" key={pic.id}>\n    //             <figure>\n    //                 <img classname=\"pic\" src={pic.media_url} width=\"300px\" height=\"300px\" />\n    //                 <figcaption>{caption}</figcaption>\n    //             </figure>\n    //         </li>\n    //     );\n    // });\n\n    //{displayPhotos}  use to display in return\n\n    // if (error) {\n    //     return <div>Error: {error.message}</div>;\n    // } else if (!isLoaded) {\n    //     return <div style={{ textAlign: 'center' }}>Loading...</div>;\n    // }\n\n    return (\n      <React.Fragment>\n      {\n        this.renderPhotos()\n      }\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Photos;\n"]},"metadata":{},"sourceType":"module"}