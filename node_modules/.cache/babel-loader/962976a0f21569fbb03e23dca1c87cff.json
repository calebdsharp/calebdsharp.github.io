{"ast":null,"code":"var _jsxFileName = \"/Users/calebsharp/react-portfolio/my-portfolio/src/Projects.js\";\nimport React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport classNames from 'classnames';\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n\n    this.backgroundChange = () => {\n      this.setState({\n        isHovered: true\n      });\n    };\n\n    this.returnBg = () => {\n      this.setState({\n        isHovered: false\n      });\n    };\n\n    this.filterRepos = () => {\n      this.state.repos.filter(repo => {\n        if (repo.name.includes('amok') || repo.name.includes('smart') || repo.name.includes('full-stack') || repo.name.includes('Fortune')) {\n          return repo.name;\n        }\n      });\n    };\n\n    this.displayRepos = () => {\n      this.filterRepos.map((repo, i) => {\n        const repoClass = repo.name;\n        console.log(repoClass);\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: `repos ${hovered}`,\n          key: repo.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 14\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: repo.html_url,\n          onMouseOver: this.backgroundChange,\n          onMouseOut: this.returnBg,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 64\n          }\n        }, repo.name));\n      });\n    };\n\n    this.state = {\n      repos: [],\n      isHovered: false,\n      isLoaded: false,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://api.github.com/users/calebdsharp/repos').then(response => response.json()).then(data => {\n      this.setState({\n        repos: data,\n        isLoaded: true\n      });\n    }).catch(error => console.error(error));\n  } // backgroundChange() {\n  //   let x = document.getElementsByClassName('repos');\n  //   let i;\n  //   for(i = 0; i < x.length; i++) {\n  //     x[i].style.backgroundSize = 'cover';\n  //     x[i].style.backgroundColor = 'pink';\n  //   }\n  // }\n  //\n\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      isHovered,\n      repos\n    } = this.state; // const hovered = classNames({\n    //   'return-bg': !isHovered,\n    //   'color-change': isHovered\n    // })\n    // const filter = repos.filter(repo => {\n    //   if (repo.name.includes('amok') || repo.name.includes('smart') || repo.name.includes('full-stack') || repo.name.includes('Fortune')) {\n    //     return repo.name;\n    //   }\n    // });\n    // const displayRepos = filter.map((repo, i) => {\n    //   const repoClass = repo.name;\n    //   console.log(repoClass);\n    //   return <div className={`repos ${hovered}`} key={repo.id}><a href={repo.html_url} onMouseOver={this.backgroundChange} onMouseOut={this.returnBg}>{repo.name}</a></div>\n    // });\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 14\n        }\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"projects\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, this.displayRepos);\n  }\n\n}\n\nexport default Projects;","map":{"version":3,"sources":["/Users/calebsharp/react-portfolio/my-portfolio/src/Projects.js"],"names":["React","Component","Row","classNames","Projects","constructor","props","backgroundChange","setState","isHovered","returnBg","filterRepos","state","repos","filter","repo","name","includes","displayRepos","map","i","repoClass","console","log","hovered","id","html_url","isLoaded","error","componentDidMount","fetch","then","response","json","data","catch","render","message"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport classNames from 'classnames';\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      repos: [],\n      isHovered: false,\n      isLoaded: false,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://api.github.com/users/calebdsharp/repos')\n      .then(response => response.json())\n        .then(data => {\n          this.setState({\n            repos: data,\n            isLoaded: true,\n          })\n        })\n    .catch(error => console.error(error))\n  }\n\n  // backgroundChange() {\n  //   let x = document.getElementsByClassName('repos');\n  //   let i;\n  //   for(i = 0; i < x.length; i++) {\n  //     x[i].style.backgroundSize = 'cover';\n  //     x[i].style.backgroundColor = 'pink';\n  //   }\n  // }\n  //\n  backgroundChange = () => {\n    this.setState({\n      isHovered: true\n    })\n  }\n\n  returnBg = () => {\n    this.setState({\n      isHovered: false\n    })\n  }\n  // returnBg() {\n  //   var x = document.getElementsByClassName('returnBg');\n  //   var i;\n  //   for (i = 0; i < x.length; i++) {\n  //     x[i].style.backgroundImage = \"none\";\n  //     x[i].style.backgroundColor = \"inherit\";\n  //   }\n  // }\n\n  filterRepos = () => {\n    this.state.repos.filter(repo => {\n      if (repo.name.includes('amok') || repo.name.includes('smart') || repo.name.includes('full-stack') || repo.name.includes('Fortune')) {\n        return repo.name;\n      }\n    })\n  }\n\n  displayRepos = () => {\n    this.filterRepos.map((repo, i) => {\n      const repoClass = repo.name;\n      console.log(repoClass);\n      return <div className={`repos ${hovered}`} key={repo.id}><a href={repo.html_url} onMouseOver={this.backgroundChange} onMouseOut={this.returnBg}>{repo.name}</a></div>\n    })\n  }\n\n  render() {\n    const { error, isLoaded, isHovered, repos } = this.state;\n\n    // const hovered = classNames({\n    //   'return-bg': !isHovered,\n    //   'color-change': isHovered\n    // })\n\n    // const filter = repos.filter(repo => {\n    //   if (repo.name.includes('amok') || repo.name.includes('smart') || repo.name.includes('full-stack') || repo.name.includes('Fortune')) {\n    //     return repo.name;\n    //   }\n    // });\n\n    // const displayRepos = filter.map((repo, i) => {\n    //   const repoClass = repo.name;\n    //   console.log(repoClass);\n    //   return <div className={`repos ${hovered}`} key={repo.id}><a href={repo.html_url} onMouseOver={this.backgroundChange} onMouseOut={this.returnBg}>{repo.name}</a></div>\n    // });\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n      <div className=\"projects\">\n        {this.displayRepos}\n      </div>\n    );\n  }\n}\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}