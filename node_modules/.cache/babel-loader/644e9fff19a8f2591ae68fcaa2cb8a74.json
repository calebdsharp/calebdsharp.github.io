{"ast":null,"code":"var _jsxFileName = \"/Users/calebsharp/github/calebdsharp.github.io/src/Components/Photos.js\";\nimport React, { Component } from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\n\nclass Photos extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderPhotos = () => {\n      fetch('https://graph.instagram.com/17841400631260357/media?access_token=IGQVJWSURzMkdyQWw3eWNzalBVdWlZAanFNZAnZAyOEQ2cHY0WW5PSTV6NHNnMkxrMGJJdTBDalNjaFl2c0cxZAFdvNHNvN190Ukw5dUdCSENzcGJwX0NtRWpna0NaMVF4bzdzQ2drb1R3&fields=id,timestamp,media_url').then(response => response.json()).then(data => {\n        this.setState({\n          photos: data.data,\n          isLoaded: true\n        });\n      }).catch(err => this.setState({\n        error: err.message\n      }));\n\n      if (this.state.error) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 14\n          }\n        }, \"Error: \", this.state.error);\n      } else if (!this.state.isLoaded) {\n        return /*#__PURE__*/React.createElement(Spinner, {\n          animation: \"grow\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 14\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(\"ul\", {\n          className: \"pic-list\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }\n        }, this.state.photos.map((pic, i) => {\n          let caption = pic.caption;\n          return /*#__PURE__*/React.createElement(\"li\", {\n            classname: \"photos\",\n            key: pic.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"figure\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            classname: \"pic\",\n            src: pic.media_url,\n            width: \"150px\",\n            height: \"150px\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }\n          }), /*#__PURE__*/React.createElement(\"figcaption\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }\n          }, caption)));\n        }));\n      }\n    };\n\n    this.state = {\n      photos: [],\n      isLoaded: false,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        isLoaded: true\n      });\n    }, 1000); // fetch('https://graph.instagram.com/17841400631260357/media?access_token=IGQVJWSURzMkdyQWw3eWNzalBVdWlZAanFNZAnZAyOEQ2cHY0WW5PSTV6NHNnMkxrMGJJdTBDalNjaFl2c0cxZAFdvNHNvN190Ukw5dUdCSENzcGJwX0NtRWpna0NaMVF4bzdzQ2drb1R3&fields=id,timestamp,media_url').then(response => response.json()).then(data => {\n    //   this.setState({photos: data.data, isLoaded: true});\n    // }).catch(err => this.setState({error: err.message}))\n  }\n\n  render() {\n    const {\n      error,\n      photos,\n      isLoaded\n    } = this.state;\n    let renderContainer = false;\n\n    if (isLoaded) {\n      renderContainer = /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      }, this.renderPhotos());\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, renderContainer);\n  }\n\n}\n\nexport default Photos;","map":{"version":3,"sources":["/Users/calebsharp/github/calebdsharp.github.io/src/Components/Photos.js"],"names":["React","Component","Spinner","Photos","constructor","props","renderPhotos","fetch","then","response","json","data","setState","photos","isLoaded","catch","err","error","message","state","map","pic","i","caption","id","media_url","componentDidMount","setTimeout","render","renderContainer"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Spinner from 'react-bootstrap/Spinner'\n\nclass Photos extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      photos: [],\n      isLoaded: false,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({isLoaded: true})\n    }, 1000);\n    // fetch('https://graph.instagram.com/17841400631260357/media?access_token=IGQVJWSURzMkdyQWw3eWNzalBVdWlZAanFNZAnZAyOEQ2cHY0WW5PSTV6NHNnMkxrMGJJdTBDalNjaFl2c0cxZAFdvNHNvN190Ukw5dUdCSENzcGJwX0NtRWpna0NaMVF4bzdzQ2drb1R3&fields=id,timestamp,media_url').then(response => response.json()).then(data => {\n    //   this.setState({photos: data.data, isLoaded: true});\n    // }).catch(err => this.setState({error: err.message}))\n  }\n\n  renderPhotos = () => {\n    fetch('https://graph.instagram.com/17841400631260357/media?access_token=IGQVJWSURzMkdyQWw3eWNzalBVdWlZAanFNZAnZAyOEQ2cHY0WW5PSTV6NHNnMkxrMGJJdTBDalNjaFl2c0cxZAFdvNHNvN190Ukw5dUdCSENzcGJwX0NtRWpna0NaMVF4bzdzQ2drb1R3&fields=id,timestamp,media_url').then(response => response.json()).then(data => {\n      this.setState({photos: data.data, isLoaded: true});\n    }).catch(err => this.setState({error: err.message}));\n    \n    if (this.state.error) {\n      return <div>Error: {this.state.error}</div>;\n    } else if (!this.state.isLoaded) {\n      return <Spinner animation=\"grow\"/>;\n    } else {\n      return (<ul className=\"pic-list\">\n        {\n          this.state.photos.map((pic, i) => {\n            let caption = pic.caption;\n            return (<li classname=\"photos\" key={pic.id}>\n              <figure>\n                <img classname=\"pic\" src={pic.media_url} width=\"150px\" height=\"150px\"/>\n                <figcaption>{caption}</figcaption>\n              </figure>\n            </li>)\n          })\n        }\n      </ul>);\n    }\n  }\n\n  render() {\n    const {error, photos, isLoaded} = this.state;\n\n    let renderContainer = false;\n\n    if (isLoaded) {\n      renderContainer =\n      <React.Fragment>\n        {this.renderPhotos()}\n      </React.Fragment>\n    }\n\n    return (<React.Fragment>\n      {renderContainer}\n    </React.Fragment>);\n  }\n}\n\nexport default Photos;\n"]},"metadata":{},"sourceType":"module"}