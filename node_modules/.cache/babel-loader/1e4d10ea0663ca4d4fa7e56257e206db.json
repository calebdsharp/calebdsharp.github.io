{"ast":null,"code":"var _jsxFileName = \"/Users/calebsharp/react-portfolio/my-portfolio/src/Projects.js\";\nimport React, { Component } from 'react';\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      repos: [],\n      isLoaded: false,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://api.github.com/users/calebdsharp/repos').then(response => response.json()).then(data => {\n      this.setState({\n        repos: data,\n        isLoaded: true\n      });\n      console.log(this.state.repos); // Prints result from `response.json()` in getRequest\n    }).catch(error => console.error(error));\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      repos\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 14\n        }\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, repos.map(repo => /*#__PURE__*/React.createElement(\"li\", {\n        key: repo.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }, repo.name)));\n    }\n  }\n\n}\n\nexport default Projects;","map":{"version":3,"sources":["/Users/calebsharp/react-portfolio/my-portfolio/src/Projects.js"],"names":["React","Component","Projects","constructor","props","state","repos","isLoaded","error","componentDidMount","fetch","then","response","json","data","setState","console","log","catch","render","message","map","repo","id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC/BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,gDAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZ,WAAKC,QAAL,CAAc;AACZT,QAAAA,KAAK,EAAEQ,IADK;AAEZP,QAAAA,QAAQ,EAAE;AAFE,OAAd;AAIAS,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWC,KAAvB,EALY,CAKkB;AAC/B,KARH,EASGY,KATH,CASSV,KAAK,IAAIQ,OAAO,CAACR,KAAR,CAAcA,KAAd,CATlB;AAUC;;AAIHW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA,KAAF;AAASD,MAAAA,QAAT;AAAmBD,MAAAA;AAAnB,QAA6B,KAAKD,KAAxC;;AACA,QAAIG,KAAJ,EAAW;AACT,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACY,OAAnB,CAAP;AACD,KAFD,MAEO,IAAI,CAACb,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFM,MAEA;AACL,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,KAAK,CAACe,GAAN,CAAUC,IAAI,iBACb;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,IAAI,CAACE,IADR,CADD,CADH,CADF;AASD;AACF;;AA1C8B;;AA4CjC,eAAetB,QAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      repos: [],\n      isLoaded: false,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://api.github.com/users/calebdsharp/repos')\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          repos: data,\n          isLoaded: true\n        })\n        console.log(this.state.repos) // Prints result from `response.json()` in getRequest\n      })\n      .catch(error => console.error(error))\n    }\n\n\n\n  render() {\n    const { error, isLoaded, repos } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <ul>\n          {repos.map(repo => (\n            <li key={repo.id}>\n              {repo.name}\n            </li>\n          ))}\n        </ul>\n      );\n    }\n  }\n}\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}