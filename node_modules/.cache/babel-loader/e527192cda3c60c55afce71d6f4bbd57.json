{"ast":null,"code":"var _jsxFileName = \"/Users/calebsharp/react-portfolio/my-portfolio/src/Projects.js\";\nimport React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport classNames from 'classnames';\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      repos: [],\n      isHovered: false,\n      isLoaded: false,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://api.github.com/users/calebdsharp/repos').then(response => response.json()).then(data => {\n      this.setState({\n        repos: data,\n        isLoaded: true\n      });\n    }).catch(error => console.error(error));\n  } // backgroundChange() {\n  //   let x = document.getElementsByClassName('repos');\n  //   let i;\n  //   for(i = 0; i < x.length; i++) {\n  //     x[i].style.backgroundSize = 'cover';\n  //     x[i].style.backgroundColor = 'pink';\n  //   }\n  // }\n  // backgroundChange = () => {\n  //   this.setState({\n  //     isHovered: true\n  //   })\n  // }\n  //\n  // returnBg = () => {\n  //   this.setState({\n  //     isHovered: false\n  //   })\n  // }\n\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      isHovered,\n      repos\n    } = this.state;\n    const hovered = classNames({\n      'return-bg': !isHovered,\n      'color-change': isHovered\n    });\n    const filter = repos.filter(repo => {\n      if (repo.name.includes('amok') || repo.name.includes('smart') || repo.name.includes('full-stack') || repo.name.includes('Fortune')) {\n        return repo.name;\n      }\n    });\n    const displayRepos = filter.map((repo, i) => {\n      let name = repo.name;\n      let newName = name.replace(/[^A-Z0-9]/ig, \" \");\n      let x = document.getElementsByClassName('repos');\n      let j;\n      let repoClass;\n\n      for (j = 0; i < x.length; i++) {\n        if (j === i) {} // x[j].style.backgroundSize = 'cover';\n        // x[j].style.backgroundColor = 'pink';\n\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"repos\",\n        key: repo.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: repo.html_url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 51\n        }\n      }, newName.toLowerCase()));\n    });\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 14\n        }\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"projects\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, displayRepos);\n  }\n\n}\n\nexport default Projects;","map":{"version":3,"sources":["/Users/calebsharp/react-portfolio/my-portfolio/src/Projects.js"],"names":["React","Component","Row","classNames","Projects","constructor","props","state","repos","isHovered","isLoaded","error","componentDidMount","fetch","then","response","json","data","setState","catch","console","render","hovered","filter","repo","name","includes","displayRepos","map","i","newName","replace","x","document","getElementsByClassName","j","repoClass","length","id","html_url","toLowerCase","message","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC/BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,SAAS,EAAE,KAFA;AAGXC,MAAAA,QAAQ,EAAE,KAHC;AAIXC,MAAAA,KAAK,EAAE;AAJI,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,gDAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACZ,WAAKC,QAAL,CAAc;AACZV,QAAAA,KAAK,EAAES,IADK;AAEZP,QAAAA,QAAQ,EAAE;AAFE,OAAd;AAID,KAPL,EAQCS,KARD,CAQOR,KAAK,IAAIS,OAAO,CAACT,KAAR,CAAcA,KAAd,CARhB;AASD,GArB8B,CAuB/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA,KAAF;AAASD,MAAAA,QAAT;AAAmBD,MAAAA,SAAnB;AAA8BD,MAAAA;AAA9B,QAAwC,KAAKD,KAAnD;AAEA,UAAMe,OAAO,GAAGnB,UAAU,CAAC;AACzB,mBAAa,CAACM,SADW;AAEzB,sBAAgBA;AAFS,KAAD,CAA1B;AAKA,UAAMc,MAAM,GAAGf,KAAK,CAACe,MAAN,CAAaC,IAAI,IAAI;AAClC,UAAIA,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmB,MAAnB,KAA8BF,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmB,OAAnB,CAA9B,IAA6DF,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmB,YAAnB,CAA7D,IAAiGF,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmB,SAAnB,CAArG,EAAoI;AAClI,eAAOF,IAAI,CAACC,IAAZ;AACD;AACF,KAJc,CAAf;AAMA,UAAME,YAAY,GAAGJ,MAAM,CAACK,GAAP,CAAW,CAACJ,IAAD,EAAOK,CAAP,KAAa;AAC3C,UAAIJ,IAAI,GAAGD,IAAI,CAACC,IAAhB;AACA,UAAIK,OAAO,GAAGL,IAAI,CAACM,OAAL,CAAa,aAAb,EAA4B,GAA5B,CAAd;AAEA,UAAIC,CAAC,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,OAAhC,CAAR;AACA,UAAIC,CAAJ;AACA,UAAIC,SAAJ;;AACA,WAAID,CAAC,GAAG,CAAR,EAAWN,CAAC,GAAGG,CAAC,CAACK,MAAjB,EAAyBR,CAAC,EAA1B,EAA8B;AAC5B,YAAIM,CAAC,KAAKN,CAAV,EAAa,CAEZ,CAH2B,CAI5B;AACA;;AACD;;AAED,0BAAO;AAAK,QAAA,SAAS,EAAC,OAAf;AAAuB,QAAA,GAAG,EAAEL,IAAI,CAACc,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAqC;AAAG,QAAA,IAAI,EAAEd,IAAI,CAACe,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBT,OAAO,CAACU,WAAR,EAAzB,CAArC,CAAP;AACD,KAhBoB,CAArB;;AAkBA,QAAI7B,KAAJ,EAAW;AACT,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAAC8B,OAAnB,CAAP;AACD,KAFD,MAEO,IAAI,CAAC/B,QAAL,EAAe;AACpB,0BAAO;AAAK,QAAA,KAAK,EAAE;AAAEgC,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AAED,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGf,YADH,CADF;AAKD;;AAxF8B;;AA0FjC,eAAevB,QAAf","sourcesContent":["import React, {Component} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport classNames from 'classnames';\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      repos: [],\n      isHovered: false,\n      isLoaded: false,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://api.github.com/users/calebdsharp/repos')\n      .then(response => response.json())\n        .then(data => {\n          this.setState({\n            repos: data,\n            isLoaded: true,\n          })\n        })\n    .catch(error => console.error(error))\n  }\n\n  // backgroundChange() {\n  //   let x = document.getElementsByClassName('repos');\n  //   let i;\n  //   for(i = 0; i < x.length; i++) {\n  //     x[i].style.backgroundSize = 'cover';\n  //     x[i].style.backgroundColor = 'pink';\n  //   }\n  // }\n\n\n  // backgroundChange = () => {\n  //   this.setState({\n  //     isHovered: true\n  //   })\n  // }\n  //\n  // returnBg = () => {\n  //   this.setState({\n  //     isHovered: false\n  //   })\n  // }\n\n  render() {\n    const { error, isLoaded, isHovered, repos } = this.state;\n\n    const hovered = classNames({\n      'return-bg': !isHovered,\n      'color-change': isHovered,\n    })\n\n    const filter = repos.filter(repo => {\n      if (repo.name.includes('amok') || repo.name.includes('smart') || repo.name.includes('full-stack') || repo.name.includes('Fortune')) {\n        return repo.name;\n      }\n    });\n\n    const displayRepos = filter.map((repo, i) => {\n      let name = repo.name;\n      let newName = name.replace(/[^A-Z0-9]/ig, \" \");\n\n      let x = document.getElementsByClassName('repos');\n      let j;\n      let repoClass;\n      for(j = 0; i < x.length; i++) {\n        if (j === i) {\n\n        }\n        // x[j].style.backgroundSize = 'cover';\n        // x[j].style.backgroundColor = 'pink';\n      }\n\n      return <div className=\"repos\" key={repo.id}><a href={repo.html_url}>{newName.toLowerCase()}</a></div>\n    });\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div style={{ textAlign: 'center'}}>Loading...</div>;\n    }\n\n    return (\n      <div className=\"projects\">\n        {displayRepos}\n      </div>\n    );\n  }\n}\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}