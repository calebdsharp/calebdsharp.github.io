{"ast":null,"code":"var _jsxFileName = \"/Users/calebsharp/react-portfolio/my-portfolio/src/Projects.js\";\nimport React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n\n    this.backgroundChange = () => {\n      this.setState({\n        isHovered: true\n      });\n    };\n\n    this.returnBg = () => {\n      this.setState({\n        isHovered: false\n      });\n    };\n\n    this.state = {\n      repos: [],\n      isHovered: false,\n      isLoaded: false,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://api.github.com/users/calebdsharp/repos').then(response => response.json()).then(data => {\n      this.setState({\n        repos: data,\n        isLoaded: true\n      });\n    }).catch(error => console.error(error));\n  } // backgroundChange() {\n  //   let x = document.getElementsByClassName('repos');\n  //   let i;\n  //   for(i = 0; i < x.length; i++) {\n  //     x[i].style.backgroundSize = 'cover';\n  //     x[i].style.backgroundColor = 'pink';\n  //   }\n  // }\n  //\n\n\n  // returnBg() {\n  //   var x = document.getElementsByClassName('returnBg');\n  //   var i;\n  //   for (i = 0; i < x.length; i++) {\n  //     x[i].style.backgroundImage = \"none\";\n  //     x[i].style.backgroundColor = \"inherit\";\n  //   }\n  // }\n  render() {\n    const {\n      error,\n      isLoaded,\n      repos\n    } = this.state;\n    let x = document.getElementsByClassName('repos');\n    let i;\n\n    for (i = 0; i < x.length; i++) {\n      x[i].style.backgroundSize = 'cover';\n      x[i].style.backgroundColor = 'pink';\n    }\n\n    const filter = repos.filter(repo => {\n      if (repo.name.includes('amok') || repo.name.includes('smart') || repo.name.includes('full-stack') || repo.name.includes('Fortune')) {\n        return repo.name;\n      }\n    });\n    const displayRepos = filter.map((repo, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"repos\",\n        key: repo.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: repo.html_url,\n        onMouseOver: this.backgroundChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 51\n        }\n      }, repo.name));\n    });\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 14\n        }\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"projects\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, displayRepos);\n  }\n\n}\n\nexport default Projects;","map":{"version":3,"sources":["/Users/calebsharp/react-portfolio/my-portfolio/src/Projects.js"],"names":["React","Component","Row","Projects","constructor","props","backgroundChange","setState","isHovered","returnBg","state","repos","isLoaded","error","componentDidMount","fetch","then","response","json","data","catch","console","render","x","document","getElementsByClassName","i","length","style","backgroundSize","backgroundColor","filter","repo","name","includes","displayRepos","map","id","html_url","message"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC/BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA+BnBC,gBA/BmB,GA+BA,MAAM;AACvB,WAAKC,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAE;AADC,OAAd;AAGD,KAnCkB;;AAAA,SAqCnBC,QArCmB,GAqCR,MAAM;AACf,WAAKF,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAE;AADC,OAAd;AAGD,KAzCkB;;AAEjB,SAAKE,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXH,MAAAA,SAAS,EAAE,KAFA;AAGXI,MAAAA,QAAQ,EAAE,KAHC;AAIXC,MAAAA,KAAK,EAAE;AAJI,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,gDAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACZ,WAAKZ,QAAL,CAAc;AACZI,QAAAA,KAAK,EAAEQ,IADK;AAEZP,QAAAA,QAAQ,EAAE;AAFE,OAAd;AAID,KAPL,EAQCQ,KARD,CAQOP,KAAK,IAAIQ,OAAO,CAACR,KAAR,CAAcA,KAAd,CARhB;AASD,GArB8B,CAuB/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA,KAAF;AAASD,MAAAA,QAAT;AAAmBD,MAAAA;AAAnB,QAA6B,KAAKD,KAAxC;AAEA,QAAIa,CAAC,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,OAAhC,CAAR;AACA,QAAIC,CAAJ;;AACA,SAAIA,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGH,CAAC,CAACI,MAAjB,EAAyBD,CAAC,EAA1B,EAA8B;AAC5BH,MAAAA,CAAC,CAACG,CAAD,CAAD,CAAKE,KAAL,CAAWC,cAAX,GAA4B,OAA5B;AACAN,MAAAA,CAAC,CAACG,CAAD,CAAD,CAAKE,KAAL,CAAWE,eAAX,GAA6B,MAA7B;AACD;;AAED,UAAMC,MAAM,GAAGpB,KAAK,CAACoB,MAAN,CAAaC,IAAI,IAAI;AAClC,UAAIA,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmB,MAAnB,KAA8BF,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmB,OAAnB,CAA9B,IAA6DF,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmB,YAAnB,CAA7D,IAAiGF,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmB,SAAnB,CAArG,EAAoI;AAClI,eAAOF,IAAI,CAACC,IAAZ;AACD;AACF,KAJc,CAAf;AAMA,UAAME,YAAY,GAAGJ,MAAM,CAACK,GAAP,CAAW,CAACJ,IAAD,EAAON,CAAP,KAAa;AAC3C,0BAAO;AAAK,QAAA,SAAS,EAAC,OAAf;AAAuB,QAAA,GAAG,EAAEM,IAAI,CAACK,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAqC;AAAG,QAAA,IAAI,EAAEL,IAAI,CAACM,QAAd;AAAwB,QAAA,WAAW,EAAE,KAAKhC,gBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8D0B,IAAI,CAACC,IAAnE,CAArC,CAAP;AACD,KAFoB,CAArB;;AAIA,QAAIpB,KAAJ,EAAW;AACT,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAAC0B,OAAnB,CAAP;AACD,KAFD,MAEO,IAAI,CAAC3B,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AAED,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGuB,YADH,CADF;AAKD;;AAnF8B;;AAqFjC,eAAehC,QAAf","sourcesContent":["import React, {Component} from 'react';\nimport Row from 'react-bootstrap/Row';\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      repos: [],\n      isHovered: false,\n      isLoaded: false,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://api.github.com/users/calebdsharp/repos')\n      .then(response => response.json())\n        .then(data => {\n          this.setState({\n            repos: data,\n            isLoaded: true\n          })\n        })\n    .catch(error => console.error(error))\n  }\n\n  // backgroundChange() {\n  //   let x = document.getElementsByClassName('repos');\n  //   let i;\n  //   for(i = 0; i < x.length; i++) {\n  //     x[i].style.backgroundSize = 'cover';\n  //     x[i].style.backgroundColor = 'pink';\n  //   }\n  // }\n  //\n  backgroundChange = () => {\n    this.setState({\n      isHovered: true\n    })\n  }\n\n  returnBg = () => {\n    this.setState({\n      isHovered: false\n    })\n  }\n  // returnBg() {\n  //   var x = document.getElementsByClassName('returnBg');\n  //   var i;\n  //   for (i = 0; i < x.length; i++) {\n  //     x[i].style.backgroundImage = \"none\";\n  //     x[i].style.backgroundColor = \"inherit\";\n  //   }\n  // }\n\n  render() {\n    const { error, isLoaded, repos } = this.state;\n\n    let x = document.getElementsByClassName('repos');\n    let i;\n    for(i = 0; i < x.length; i++) {\n      x[i].style.backgroundSize = 'cover';\n      x[i].style.backgroundColor = 'pink';\n    }\n\n    const filter = repos.filter(repo => {\n      if (repo.name.includes('amok') || repo.name.includes('smart') || repo.name.includes('full-stack') || repo.name.includes('Fortune')) {\n        return repo.name;\n      }\n    });\n\n    const displayRepos = filter.map((repo, i) => {\n      return <div className=\"repos\" key={repo.id}><a href={repo.html_url} onMouseOver={this.backgroundChange} >{repo.name}</a></div>\n    });\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n      <div className=\"projects\">\n        {displayRepos}\n      </div>\n    );\n  }\n}\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}