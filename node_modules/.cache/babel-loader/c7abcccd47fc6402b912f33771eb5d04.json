{"ast":null,"code":"var _jsxFileName = \"/Users/calebsharp/react-portfolio/my-portfolio/src/Projects.js\";\nimport React, { Component } from 'react';\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getRepos = () => {\n      fetch('https://api.github.com/users/calebdsharp/repos').then(result => {\n        this.setState({\n          isLoaded: true,\n          repos: result\n        });\n      }, error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n    };\n\n    this.state = {\n      repos: [],\n      isLoaded: false,\n      error: null\n    };\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      repos\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 14\n        }\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }, repos.map(repo => /*#__PURE__*/React.createElement(\"li\", {\n        key: repo.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, repo.name)));\n    }\n  }\n\n}\n\nexport default Projects;","map":{"version":3,"sources":["/Users/calebsharp/react-portfolio/my-portfolio/src/Projects.js"],"names":["React","Component","Projects","constructor","props","getRepos","fetch","then","result","setState","isLoaded","repos","error","state","render","message","map","repo","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC/BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,QATmB,GASR,MAAM;AACfC,MAAAA,KAAK,CAAC,gDAAD,CAAL,CACCC,IADD,CAEGC,MAAD,IAAY;AACZ,aAAKC,QAAL,CAAc;AACZC,UAAAA,QAAQ,EAAE,IADE;AAEZC,UAAAA,KAAK,EAAEH;AAFK,SAAd;AAID,OAPD,EAQCI,KAAD,IAAU;AACR,aAAKH,QAAL,CAAc;AACZC,UAAAA,QAAQ,EAAE,IADE;AAEZE,UAAAA;AAFY,SAAd;AAID,OAbD;AAcA,KAxBiB;;AAEjB,SAAKC,KAAL,GAAa;AACXF,MAAAA,KAAK,EAAE,EADI;AAEXD,MAAAA,QAAQ,EAAE,KAFC;AAGXE,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAmBDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEF,MAAAA,KAAF;AAASF,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA6B,KAAKE,KAAxC;;AACA,QAAID,KAAJ,EAAW;AACT,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACG,OAAnB,CAAP;AACD,KAFD,MAEO,IAAI,CAACL,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFM,MAEA;AACL,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,KAAK,CAACK,GAAN,CAAUC,IAAI,iBACb;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,IAAI,CAACC,IADR,CADD,CADH,CADF;AASD;AACF;;AA5C8B;;AA8CjC,eAAehB,QAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      repos: [],\n      isLoaded: false,\n      error: null\n    };\n  }\n\n  getRepos = () => {\n    fetch('https://api.github.com/users/calebdsharp/repos')\n    .then(\n      (result) => {\n      this.setState({\n        isLoaded: true,\n        repos: result\n      });\n    },\n    (error)=> {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    }\n  )}\n\n  render() {\n    const { error, isLoaded, repos } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <ul>\n          {repos.map(repo => (\n            <li key={repo.name}>\n              {repo.name}\n            </li>\n          ))}\n        </ul>\n      );\n    }\n  }\n}\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}